https://github.com/google/python-fire





[a :note; :contents """
TriOptima/tri.struct
tri.struct supplies classes that can be used like dictionaries and as objects with attribute access at the same time
https://github.com/TriOptima/tri.struct
see also my dotdict
"""].


[a :note; :contents """
https://github.com/jlubcke/pytest-pycharm
Plugin for py.test to enter PyCharm debugger on uncaught exceptions
"""].


[:keyphrase "for each line of input:";
:code [
:lang :python;
:contents """
import sys
for line in sys.stdin.readlines():
"""]]


[:keyphrase "standard_python_header"
:code """#!/usr/bin/env python3"""
:note """"coding" no longer necessary, with python 3"]

[:contents """
bash --init-file "venv/bin/activate"
fish -C ". venv/bin/activate.fish"
"""].


https://news.ycombinator.com/item?id=28880782




typing
	https://www.reddit.com/r/Python/comments/qlotne/github_beartypebeartype_unbearably_fast_o1/
	
	
	
	
	
# web gui frameworks
	
	https://github.com/dddomodossola/remi
	
	https://www.nagare.org/
		"back and fork", cute
	
	https://holoviz.org/
	
	

# configuration management
	https://www.dynaconf.com/
	https://hydra.cc/docs/intro/
	





# task queues


	# airflow?
	# fireworq?
	
	
	
	
	# huey
		monitoring -- https://pypi.org/project/django-huey-monitor/
		Immediate mode - not useful when i have a separate webserver trigerring the tasks
	
	# rq
		monitoring -- https://github.com/Parallels/rq-dashboard
		
		
	
	# dramatiq
		no monitoring
	# TaskTiger
		no monitoring
	

	## celery
	
		RDB!
			https://www.youtube.com/watch?v=0LOytHKMSz0
			this explains a lot. I had huge trouble trying to debug my celery tasks.
			still it's a question if i'll be able to make pycharm connect to that and do "normal" graphical debugging / break on exceptions...
		
		```
		from celery import current_app
		current_app.conf.CELERY_ALWAYS_EAGER = True
		current_app.conf.CELERY_EAGER_PROPAGATES_EXCEPTIONS = True
		Doing so makes celery execute in the same thread as the currently executing thread.
		```
		 - https://stackoverflow.com/questions/29312809/how-do-i-enable-remote-celery-debugging-in-pycharm
		 

	
		worker_max_tasks_per_child = 1
	
		https://youtu.be/ceJ-vy7fvus?t=811
			-Ofair
			app.task_acks_late = True
			app.worker_prefetch_multiplier = 1 # CELERY_PREFETCH_MULTIPLIER
	
		ALWAYS_EAGER
			| The above code runs without an active worker and executes fib(8) synchronously within the same process. You may know this behaviour from Celery as ALWAYS_EAGER

		joining all tasks is called "chord"
		
		| If you call the group, the tasks will be applied one after another in the current process
			what?
	
		https://youtu.be/Bo6UtRhedjE?t=557
			interesting idea, only import your code when task is starting - avoid need for reloads of whole worker
	
		https://youtu.be/Bo6UtRhedjE?t=912
			paralleling task states in an sql table, this would be useful....
			
		https://www.youtube.com/watch?v=V6XRf457Es8
			declarative dataflows
		
		
	
